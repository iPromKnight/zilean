volumes:
  zilean_data:
  pg-data:
  pgadmin-data:

services:
  zilean:
    image: ipromknight/zilean:latest
    restart: unless-stopped
    container_name: zilean
    tty: true
    ports:
      - "8181:8181"
    volumes:
      - zilean_data:/app/data
    environment:
        Zilean__Database__ConnectionString: "Host=postgres;Port=5432;Database=zilean;Username=postgres;Password=postgres"
      # Zilean__Dmm__ImportBatched: "true"                    Allows enabling batched import - this is for low-end systems.
      # Zilean__Dmm__MaxFilteredResults: 200                  Allows changing the maximum number of filtered results returned by the DMM API. 200 is the default.
      # Zilean__Dmm__MinimumScoreMatch: 0.85                  Allows changing the minimum score match for the DMM API. 0.85 is the default. Values between 0 and 1 are accepted.
      # Zilean__Imdb__MinimumScoreMatch: 0.85                 Allows changing the minimum score match for Imdb Matching API. 0.85 is the default. Values between 0 and 1 are accepted.
      # Zilean__Dmm__MinimumReDownloadIntervalMinutes: 30     Minimum number of minutes between downloads from the DMM Repo - defaults to `30`
      # Zilean__Imdb__EnableImportMatching: true              Should IMDB functionality be enabled, true/false, defaults to `true`. Disabling will lead to drastically improved import speed on initial run however you will have no internal imdb matching within zilean, so its up to the upstream project utilising zilean to implement that.
    healthcheck:
      test: curl --connect-timeout 10 --silent --show-error --fail http://localhost:8181/healthchecks/ping
      timeout: 60s
      interval: 30s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16.3-alpine3.20
    container_name: postgres
    restart: unless-stopped
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: zilean
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 6001:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@example.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    configs:
      - source: pgadmin_servers.json
        target: /pgadmin4/servers.json
      - source: pgadmin_pgpass
        target: /pgpass
    depends_on:
      postgres:
        condition: service_healthy

configs:
  pgadmin_pgpass:
    content: postgres:5432:*:postgres:postgres
  pgadmin_servers.json:
    content: |
      {
        "Servers": {
        "1": {
            "Group": "Servers",
            "Name": "Zilean Database",
            "Host": "postgres",
            "Port": 5432,
            "MaintenanceDB": "zilean",
            "Username": "postgres",
            "PassFile": "/pgpass",
            "SSLMode": "prefer"
          }
        }
      }