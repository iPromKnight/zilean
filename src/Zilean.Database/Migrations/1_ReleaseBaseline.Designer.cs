// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Zilean.Database;

#nullable disable

namespace Zilean.Database.Migrations
{
    [DbContext(typeof(ZileanDbContext))]
    [Migration("1_ReleaseBaseline")]
    partial class ReleaseBaseline
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Zilean.Shared.Features.Dmm.TorrentInfo", b =>
                {
                    b.Property<string>("InfoHash")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "info_hash");

                    b.Property<List<string>>("Audio")
                        .HasColumnType("text[]")
                        .HasAnnotation("Relational:JsonPropertyName", "audio");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<List<string>>("Codec")
                        .HasColumnType("text[]")
                        .HasAnnotation("Relational:JsonPropertyName", "codec");

                    b.Property<List<int>>("Episodes")
                        .HasColumnType("integer[]")
                        .HasAnnotation("Relational:JsonPropertyName", "episodes");

                    b.Property<string>("ImdbId")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "imdb_id");

                    b.Property<List<string>>("Languages")
                        .HasColumnType("text[]")
                        .HasAnnotation("Relational:JsonPropertyName", "languages");

                    b.Property<List<string>>("Quality")
                        .HasColumnType("text[]")
                        .HasAnnotation("Relational:JsonPropertyName", "quality");

                    b.Property<string>("RawTitle")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "raw_title");

                    b.Property<bool?>("Remastered")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "remastered");

                    b.Property<List<string>>("Resolution")
                        .HasColumnType("text[]")
                        .HasAnnotation("Relational:JsonPropertyName", "resolution");

                    b.Property<List<int>>("Seasons")
                        .HasColumnType("integer[]")
                        .HasAnnotation("Relational:JsonPropertyName", "seasons");

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "size");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "parsed_title");

                    b.Property<int?>("Year")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "year");

                    b.HasKey("InfoHash");

                    b.HasIndex("ImdbId");

                    b.HasIndex("InfoHash")
                        .IsUnique();

                    b.ToTable("Torrents", (string)null);
                });

            modelBuilder.Entity("Zilean.Shared.Features.Imdb.ImdbFile", b =>
                {
                    b.Property<string>("ImdbId")
                        .HasColumnType("text");

                    b.Property<bool>("Adult")
                        .HasColumnType("boolean");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("ImdbId");

                    b.HasIndex("ImdbId")
                        .IsUnique();

                    b.ToTable("ImdbFiles", (string)null);

                    b.HasAnnotation("Relational:JsonPropertyName", "imdb");
                });

            modelBuilder.Entity("Zilean.Shared.Features.Dmm.TorrentInfo", b =>
                {
                    b.HasOne("Zilean.Shared.Features.Imdb.ImdbFile", "Imdb")
                        .WithMany()
                        .HasForeignKey("ImdbId");

                    b.Navigation("Imdb");
                });
#pragma warning restore 612, 618
        }
    }
}
